class Solution {
public:
    int solvebyrec(vector<int>& prices, int fee, int i, int buy, vector<vector<int>>& dp) {
        if (i == prices.size()) return 0;
        if (dp[i][buy] != -1) {
            return dp[i][buy];
        }

        int profit = 0;

        if (buy) {
            int include = -prices[i] - fee + solvebyrec(prices, fee, i + 1, 0, dp);
            int exclude = solvebyrec(prices, fee, i + 1, 1, dp);
            profit = max(include, exclude);
        } else {
            int include = prices[i] + solvebyrec(prices, fee, i + 1, 1, dp);
            int exclude = solvebyrec(prices, fee, i + 1, 0, dp);
            profit = max(include, exclude);
        }

        return dp[i][buy] = profit;
    }

    int maxProfit(vector<int>& prices, int fee) {
        int n = prices.size();
        vector<vector<int>> dp(n + 1, vector<int>(2));
        for (int i = 0; i <= n; ++i) {
            dp[i][0] = dp[i][1] = -1;
        }
        return solvebyrec(prices, fee, 0, 1, dp);
    }
};
