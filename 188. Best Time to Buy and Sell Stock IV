class Solution {
public:
    int solvebyrec(vector<int>& prices, int i, int buy, int k,vector<vector<vector<int>>>&dp) {
        if (i >= prices.size() || k == 0) return 0;
        if (buy && k == 0) return 0;
        if(dp[i][k][buy]!=-1){
            return dp[i][k][buy];
        } 
        
        int profit = 0;

        if (buy) {
            int include = -prices[i] + solvebyrec(prices, i + 1, 0, k,dp);
            int exclude = solvebyrec(prices, i + 1, 1, k,dp);
            profit = max(include, exclude);
        } else {
            int include = prices[i] + solvebyrec(prices, i + 1, 1, k - 1,dp);
            int exclude = solvebyrec(prices, i + 1, 0, k,dp);
            profit = max(include, exclude);
        }
        return dp[i][k][buy]=profit;
    }

    int maxProfit(int k, vector<int>& prices) {
        int n = prices.size();
         vector<vector<vector<int>>>dp(n, vector<vector<int>>(k + 1, vector<int>(2, -1)));
        return solvebyrec(prices, 0, 1, k,dp);
    }
};
